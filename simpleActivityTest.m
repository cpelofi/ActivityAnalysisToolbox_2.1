function [Chi,pVal,DAct,bins] = simpleActivityTest(AC,N,Nbins,P)

%function [Chi,pVal,DAct,bins] = simpleActivityTest(AC,N,Nbins,P)
%
% This function performes a goodness of fit test on the activity-level
% distribution AC against the null hypothesis of uncoordinated activity.
% The Null Hypothesis is represented by the estimated activity-level 
% distribution of random activity, generated by a binomial distribution 
% using the average activity rate.
% The test uses an optimised division of these distributions  process to selecting appropriate
% bins according to the binomial random model generated as the null
%  hypothesis.
%
% AC is the activity-level time series, a single column without time
    % stamps. It is generated by the function activityCount, in which the
    % activity even is described.
% N is the number of responses in the collection that generated
    % resulted in AC.
% Nbins is the prefered number of bins to simplify the activity 
    % distribution for the calculation of the goodness of fit test.
% An alternative activity-level distribution (not estimated from the 
    % activity rate) can be included as a fourth argument, P. P may be a real 
    % number between [0,1], treated as the activity rate used to generate the 
    % null hypothesis. Else, P can be a vector of length N+1 describing a
    % probability distribution of activity-levels 0:N/N.
%    
% Chi is the chi squared value for the two set of bins. 
% pVal is the likelyhood of a distribution as extreme or more so being
    % generated by the binomial model, each as summarized in the bins.    
% The output Dact is a two column matrix with the second being the actual
    % activity histogram for all numbers of participants (0:N), and the second
    % being the estimated distribution of the binomial model.
% bins is two columns as well (model, actual) of the bins selected for the
    % goodness of fit test.
%
% This function requires the Statistics Toolbox and equiSplit from the
% Activity Analysis Toolbox
%
% Finn Upham, March 31st, 2011
% updated 2012/08/22
% updated and renamed 2016/01/27 previously sichiSq


L=size(AC,1);

% to calculate the null hypothesis of a binomial random model
% avg rate of activity

n=N;
aL = (0:n)';
p = zeros(N+1,1);

if nargin==4
    % use the subplied activity probability to set up the random model.
    if length(P)==1
        a = P;
        for i=0:n
            p(i+1)=((a^i)*(1-a)^(n-i))*nchoosek(n,i);
        end
    elseif length(P)==N+1
        p = P;
        if size(p,2)~=1
            p = p';
        end
    else
       error('MatLab:sichiSq:DistModel',...
           'Distribution must be of suitable form, 1x1 or (N+1)x1') 
    end
    dof = 0;
else
    a=sum(AC)/(L);
    % calculate the binomial probability of different activity levels.
    if n < 50
        for i=0:n
            p(i+1)=((a^i)*(1-a)^(n-i))*nchoosek(n,i);
        end
    else
       for i=0:n
            p(i+1)=exp(-n*a)*((n*a)^i)/factorial(i);
       end 
    end
    dof = -1;
end


pAct=L*p;
NAct=hist(AC*N,aL);
DAct=[NAct' pAct];
[v,bins] = equiSplit(pAct,Nbins,5);

if isempty(bins)
    Chi = 0;
    pVal = 1;
    return
end
    
    
Nbins = size(bins,1);
bins = [zeros(size(bins)) bins];
for i = 1:Nbins
    bins(i,1) = sum(NAct(v{i}));
end

Chi=sum(sum(((bins(:,1)-bins(:,2)).^2)./bins(:,1)));
pVal=1-chi2cdf(Chi,Nbins-1+dof);

% An alternative assessment of distribution equivalence:
% Two-sample Kolmogorov-Smirnov goodness-of-fit hypothesis test.
% ActCDF = cumsum(DAct)/sum(DAct(:,1));
% n = sum(DAct(:,1)); % wellllllll 
% KSstat = max(abs(diff(ActCDF,[],2)));
% % asymptotic pvalue, from matlab's kstest2.m
% lambda =  max((sqrt(n) + 0.12 + 0.11/sqrt(n)) * KSstat , 0);
% j       =  (1:101)';
% pValue  =  2 * sum((-1).^(j-1).*exp(-2*lambda*lambda*j.^2));
% pValue  =  min(max(pValue, 0), 1);
% pVal = pValue;
%nope. [~,pVal] = kstest2(cumsum(DAct(1:r,1))/L, cumsum(DAct(1:r,2))/L);

 